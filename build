#!/bin/bash -x

ORG_PATH="github.com/vtolstov"
REPO_PATH="${ORG_PATH}/qemu-ga"
VERSION=`git describe --long`
BUILD_TIME=`date +%FT%T%z`
LDFLAGS="-X main.Version=${VERSION} -X main.BuildTime=${BUILD_TIME}"


rm -rf bin tmp

export GO15VENDOREXPERIMENT=1
export GOPATH=$(pwd)/gopath
mkdir -p $GOPATH
mkdir -p bin
mkdir -p tmp

go version | grep -q go1.5

if [ "x$?" != "x0" ]; then
    export GOROOT=$(pwd)/goroot
    export PATH=$GOROOT/bin:$PATH
    mkdir -p $GOROOT
    wget https://storage.googleapis.com/golang/go1.5.linux-amd64.tar.gz -O tmp/go.tar.gz
    tar --strip-components=1 -C $GOROOT -xf tmp/go.tar.gz
fi

if [ ! -h $GOPATH/src/${REPO_PATH} ]; then
        mkdir -p $GOPATH/src/${ORG_PATH}
        ln -s ../../../.. $GOPATH/src/${REPO_PATH} || echo "exit 255"
fi

set -e

for os in linux; do # freebsd; do
    GOOS=${os} GOARCH=amd64 go build -x -ldflags "${LDFLAGS}" -tags netgo -o bin/qemu-ga-${os}-x86_64 ${REPO_PATH}
    GOOS=${os} GOARCH=amd64 go build -x -race -ldflags "${LDFLAGS}" -tags netgo -o bin/qemu-ga-${os}-x86_64-race ${REPO_PATH}
    GOOS=${os} GOARCH=386 go build -x -ldflags "${LDFLAGS}" -tags netgo -o bin/qemu-ga-${os}-x86_32 ${REPO_PATH}
done
